{"version":3,"file":"component---src-pages-notes-on-the-staff-tsx-b55ed3ea5a514b075ffe.js","mappings":"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","sources":["webpack://music/./node_modules/webmidi/webmidi.min.js","webpack://music/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://music/./src/utils/midi.ts","webpack://music/./src/pages/notes-on-the-staff.tsx"],"sourcesContent":["/*\n\nWebMidi v2.5.3\n\nWebMidi.js helps you tame the Web MIDI API. Send and receive MIDI messages with ease. Control instruments with user-friendly functions (playNote, sendPitchBend, etc.). React to MIDI input with simple event listeners (noteon, pitchbend, controlchange, etc.).\nhttps://github.com/djipco/webmidi\n\n\nThe MIT License (MIT)\n\nCopyright (c) 2015-2019, Jean-Philippe Côté\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial\nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES\nOR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n!function (scope) {\n  \"use strict\";\n\n  function WebMidi() {\n    if (WebMidi.prototype._singleton) throw new Error(\"WebMidi is a singleton, it cannot be instantiated directly.\");\n    (WebMidi.prototype._singleton = this)._inputs = [], this._outputs = [], this._userHandlers = {}, this._stateChangeQueue = [], this._processingStateChange = !1, this._midiInterfaceEvents = [\"connected\", \"disconnected\"], this._nrpnBuffer = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], this._nrpnEventsEnabled = !0, this._nrpnTypes = [\"entry\", \"increment\", \"decrement\"], this._notes = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"], this._semitones = {\n      C: 0,\n      D: 2,\n      E: 4,\n      F: 5,\n      G: 7,\n      A: 9,\n      B: 11\n    }, Object.defineProperties(this, {\n      MIDI_SYSTEM_MESSAGES: {\n        value: {\n          sysex: 240,\n          timecode: 241,\n          songposition: 242,\n          songselect: 243,\n          tuningrequest: 246,\n          sysexend: 247,\n          clock: 248,\n          start: 250,\n          continue: 251,\n          stop: 252,\n          activesensing: 254,\n          reset: 255,\n          midimessage: 0,\n          unknownsystemmessage: -1\n        },\n        writable: !1,\n        enumerable: !0,\n        configurable: !1\n      },\n      MIDI_CHANNEL_MESSAGES: {\n        value: {\n          noteoff: 8,\n          noteon: 9,\n          keyaftertouch: 10,\n          controlchange: 11,\n          channelmode: 11,\n          nrpn: 11,\n          programchange: 12,\n          channelaftertouch: 13,\n          pitchbend: 14\n        },\n        writable: !1,\n        enumerable: !0,\n        configurable: !1\n      },\n      MIDI_REGISTERED_PARAMETER: {\n        value: {\n          pitchbendrange: [0, 0],\n          channelfinetuning: [0, 1],\n          channelcoarsetuning: [0, 2],\n          tuningprogram: [0, 3],\n          tuningbank: [0, 4],\n          modulationrange: [0, 5],\n          azimuthangle: [61, 0],\n          elevationangle: [61, 1],\n          gain: [61, 2],\n          distanceratio: [61, 3],\n          maximumdistance: [61, 4],\n          maximumdistancegain: [61, 5],\n          referencedistanceratio: [61, 6],\n          panspreadangle: [61, 7],\n          rollangle: [61, 8]\n        },\n        writable: !1,\n        enumerable: !0,\n        configurable: !1\n      },\n      MIDI_CONTROL_CHANGE_MESSAGES: {\n        value: {\n          bankselectcoarse: 0,\n          modulationwheelcoarse: 1,\n          breathcontrollercoarse: 2,\n          footcontrollercoarse: 4,\n          portamentotimecoarse: 5,\n          dataentrycoarse: 6,\n          volumecoarse: 7,\n          balancecoarse: 8,\n          pancoarse: 10,\n          expressioncoarse: 11,\n          effectcontrol1coarse: 12,\n          effectcontrol2coarse: 13,\n          generalpurposeslider1: 16,\n          generalpurposeslider2: 17,\n          generalpurposeslider3: 18,\n          generalpurposeslider4: 19,\n          bankselectfine: 32,\n          modulationwheelfine: 33,\n          breathcontrollerfine: 34,\n          footcontrollerfine: 36,\n          portamentotimefine: 37,\n          dataentryfine: 38,\n          volumefine: 39,\n          balancefine: 40,\n          panfine: 42,\n          expressionfine: 43,\n          effectcontrol1fine: 44,\n          effectcontrol2fine: 45,\n          holdpedal: 64,\n          portamento: 65,\n          sustenutopedal: 66,\n          softpedal: 67,\n          legatopedal: 68,\n          hold2pedal: 69,\n          soundvariation: 70,\n          resonance: 71,\n          soundreleasetime: 72,\n          soundattacktime: 73,\n          brightness: 74,\n          soundcontrol6: 75,\n          soundcontrol7: 76,\n          soundcontrol8: 77,\n          soundcontrol9: 78,\n          soundcontrol10: 79,\n          generalpurposebutton1: 80,\n          generalpurposebutton2: 81,\n          generalpurposebutton3: 82,\n          generalpurposebutton4: 83,\n          reverblevel: 91,\n          tremololevel: 92,\n          choruslevel: 93,\n          celestelevel: 94,\n          phaserlevel: 95,\n          databuttonincrement: 96,\n          databuttondecrement: 97,\n          nonregisteredparametercoarse: 98,\n          nonregisteredparameterfine: 99,\n          registeredparametercoarse: 100,\n          registeredparameterfine: 101\n        },\n        writable: !1,\n        enumerable: !0,\n        configurable: !1\n      },\n      MIDI_NRPN_MESSAGES: {\n        value: {\n          entrymsb: 6,\n          entrylsb: 38,\n          increment: 96,\n          decrement: 97,\n          paramlsb: 98,\n          parammsb: 99,\n          nullactiveparameter: 127\n        },\n        writable: !1,\n        enumerable: !0,\n        configurable: !1\n      },\n      MIDI_CHANNEL_MODE_MESSAGES: {\n        value: {\n          allsoundoff: 120,\n          resetallcontrollers: 121,\n          localcontrol: 122,\n          allnotesoff: 123,\n          omnimodeoff: 124,\n          omnimodeon: 125,\n          monomodeon: 126,\n          polymodeon: 127\n        },\n        writable: !1,\n        enumerable: !0,\n        configurable: !1\n      },\n      octaveOffset: {\n        value: 0,\n        writable: !0,\n        enumerable: !0,\n        configurable: !1\n      }\n    }), Object.defineProperties(this, {\n      supported: {\n        enumerable: !0,\n        get: function get() {\n          return \"requestMIDIAccess\" in navigator;\n        }\n      },\n      enabled: {\n        enumerable: !0,\n        get: function () {\n          return void 0 !== this.interface;\n        }.bind(this)\n      },\n      inputs: {\n        enumerable: !0,\n        get: function () {\n          return this._inputs;\n        }.bind(this)\n      },\n      outputs: {\n        enumerable: !0,\n        get: function () {\n          return this._outputs;\n        }.bind(this)\n      },\n      sysexEnabled: {\n        enumerable: !0,\n        get: function () {\n          return !(!this.interface || !this.interface.sysexEnabled);\n        }.bind(this)\n      },\n      nrpnEventsEnabled: {\n        enumerable: !0,\n        get: function () {\n          return !!this._nrpnEventsEnabled;\n        }.bind(this),\n        set: function set(enabled) {\n          return this._nrpnEventsEnabled = enabled, this._nrpnEventsEnabled;\n        }\n      },\n      nrpnTypes: {\n        enumerable: !0,\n        get: function () {\n          return this._nrpnTypes;\n        }.bind(this)\n      },\n      time: {\n        enumerable: !0,\n        get: function get() {\n          return performance.now();\n        }\n      }\n    });\n  }\n\n  var wm = new WebMidi();\n\n  function Input(midiInput) {\n    var that = this;\n    this._userHandlers = {\n      channel: {},\n      system: {}\n    }, this._midiInput = midiInput, Object.defineProperties(this, {\n      connection: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiInput.connection;\n        }\n      },\n      id: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiInput.id;\n        }\n      },\n      manufacturer: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiInput.manufacturer;\n        }\n      },\n      name: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiInput.name;\n        }\n      },\n      state: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiInput.state;\n        }\n      },\n      type: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiInput.type;\n        }\n      }\n    }), this._initializeUserHandlers(), this._midiInput.onmidimessage = this._onMidiMessage.bind(this);\n  }\n\n  function Output(midiOutput) {\n    var that = this;\n    this._midiOutput = midiOutput, Object.defineProperties(this, {\n      connection: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiOutput.connection;\n        }\n      },\n      id: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiOutput.id;\n        }\n      },\n      manufacturer: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiOutput.manufacturer;\n        }\n      },\n      name: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiOutput.name;\n        }\n      },\n      state: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiOutput.state;\n        }\n      },\n      type: {\n        enumerable: !0,\n        get: function get() {\n          return that._midiOutput.type;\n        }\n      }\n    });\n  }\n\n  WebMidi.prototype.enable = function (callback, sysex) {\n    this.enabled || (this.supported ? navigator.requestMIDIAccess({\n      sysex: sysex\n    }).then(function (midiAccess) {\n      var promiseTimeout,\n          events = [],\n          promises = [];\n      this.interface = midiAccess, this._resetInterfaceUserHandlers(), this.interface.onstatechange = function (e) {\n        events.push(e);\n      };\n\n      for (var inputs = midiAccess.inputs.values(), input = inputs.next(); input && !input.done; input = inputs.next()) {\n        promises.push(input.value.open());\n      }\n\n      for (var outputs = midiAccess.outputs.values(), output = outputs.next(); output && !output.done; output = outputs.next()) {\n        promises.push(output.value.open());\n      }\n\n      function onPortsOpen() {\n        clearTimeout(promiseTimeout), this._updateInputsAndOutputs(), this.interface.onstatechange = this._onInterfaceStateChange.bind(this), \"function\" == typeof callback && callback.call(this), events.forEach(function (event) {\n          this._onInterfaceStateChange(event);\n        }.bind(this));\n      }\n\n      promiseTimeout = setTimeout(onPortsOpen.bind(this), 200), Promise && Promise.all(promises).catch(function (err) {}).then(onPortsOpen.bind(this));\n    }.bind(this), function (err) {\n      \"function\" == typeof callback && callback.call(this, err);\n    }.bind(this)) : \"function\" == typeof callback && callback(new Error(\"The Web MIDI API is not supported by your browser.\")));\n  }, WebMidi.prototype.disable = function () {\n    if (!this.supported) throw new Error(\"The Web MIDI API is not supported by your browser.\");\n    this.enabled && (this.removeListener(), this.inputs.forEach(function (input) {\n      input.removeListener();\n    })), this.interface && (this.interface.onstatechange = void 0), this.interface = void 0, this._inputs = [], this._outputs = [], this._nrpnEventsEnabled = !0, this._resetInterfaceUserHandlers();\n  }, WebMidi.prototype.addListener = function (type, listener) {\n    if (!this.enabled) throw new Error(\"WebMidi must be enabled before adding event listeners.\");\n    if (\"function\" != typeof listener) throw new TypeError(\"The 'listener' parameter must be a function.\");\n    if (!(0 <= this._midiInterfaceEvents.indexOf(type))) throw new TypeError(\"The specified event type is not supported.\");\n    return this._userHandlers[type].push(listener), this;\n  }, WebMidi.prototype.hasListener = function (type, listener) {\n    if (!this.enabled) throw new Error(\"WebMidi must be enabled before checking event listeners.\");\n    if (\"function\" != typeof listener) throw new TypeError(\"The 'listener' parameter must be a function.\");\n    if (!(0 <= this._midiInterfaceEvents.indexOf(type))) throw new TypeError(\"The specified event type is not supported.\");\n\n    for (var o = 0; o < this._userHandlers[type].length; o++) {\n      if (this._userHandlers[type][o] === listener) return !0;\n    }\n\n    return !1;\n  }, WebMidi.prototype.removeListener = function (type, listener) {\n    if (!this.enabled) throw new Error(\"WebMidi must be enabled before removing event listeners.\");\n    if (void 0 !== listener && \"function\" != typeof listener) throw new TypeError(\"The 'listener' parameter must be a function.\");\n    if (0 <= this._midiInterfaceEvents.indexOf(type)) {\n      if (listener) for (var o = 0; o < this._userHandlers[type].length; o++) {\n        this._userHandlers[type][o] === listener && this._userHandlers[type].splice(o, 1);\n      } else this._userHandlers[type] = [];\n    } else {\n      if (void 0 !== type) throw new TypeError(\"The specified event type is not supported.\");\n\n      this._resetInterfaceUserHandlers();\n    }\n    return this;\n  }, WebMidi.prototype.toMIDIChannels = function (channel) {\n    var channels;\n    if (\"all\" === channel || void 0 === channel) channels = [\"all\"];else {\n      if (\"none\" === channel) return channels = [];\n      channels = Array.isArray(channel) ? channel : [channel];\n    }\n    return -1 < channels.indexOf(\"all\") && (channels = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]), channels.map(function (ch) {\n      return parseInt(ch);\n    }).filter(function (ch) {\n      return 1 <= ch && ch <= 16;\n    });\n  }, WebMidi.prototype.getInputById = function (id) {\n    if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n    id = String(id);\n\n    for (var i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].id === id) return this.inputs[i];\n    }\n\n    return !1;\n  }, WebMidi.prototype.getOutputById = function (id) {\n    if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n    id = String(id);\n\n    for (var i = 0; i < this.outputs.length; i++) {\n      if (this.outputs[i].id === id) return this.outputs[i];\n    }\n\n    return !1;\n  }, WebMidi.prototype.getInputByName = function (name) {\n    if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n\n    for (var i = 0; i < this.inputs.length; i++) {\n      if (~this.inputs[i].name.indexOf(name)) return this.inputs[i];\n    }\n\n    return !1;\n  }, WebMidi.prototype.getOctave = function (number) {\n    if (null != number && 0 <= number && number <= 127) return Math.floor(Math.floor(number) / 12 - 1) + Math.floor(wm.octaveOffset);\n  }, WebMidi.prototype.getOutputByName = function (name) {\n    if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n\n    for (var i = 0; i < this.outputs.length; i++) {\n      if (~this.outputs[i].name.indexOf(name)) return this.outputs[i];\n    }\n\n    return !1;\n  }, WebMidi.prototype.guessNoteNumber = function (input) {\n    var output = !1;\n    if (input && input.toFixed && 0 <= input && input <= 127 ? output = Math.round(input) : 0 <= parseInt(input) && parseInt(input) <= 127 ? output = parseInt(input) : (\"string\" == typeof input || input instanceof String) && (output = this.noteNameToNumber(input)), !1 === output) throw new Error(\"Invalid input value (\" + input + \").\");\n    return output;\n  }, WebMidi.prototype.noteNameToNumber = function (name) {\n    \"string\" != typeof name && (name = \"\");\n    var matches = name.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)/i);\n    if (!matches) throw new RangeError(\"Invalid note name.\");\n\n    var semitones = wm._semitones[matches[1].toUpperCase()],\n        result = 12 * (parseInt(matches[3]) + 1 - Math.floor(wm.octaveOffset)) + semitones;\n\n    if (-1 < matches[2].toLowerCase().indexOf(\"b\") ? result -= matches[2].length : -1 < matches[2].toLowerCase().indexOf(\"#\") && (result += matches[2].length), result < 0 || 127 < result) throw new RangeError(\"Invalid note name or note outside valid range.\");\n    return result;\n  }, WebMidi.prototype._updateInputsAndOutputs = function () {\n    this._updateInputs(), this._updateOutputs();\n  }, WebMidi.prototype._updateInputs = function () {\n    for (var i = 0; i < this._inputs.length; i++) {\n      for (var remove = !0, updated = this.interface.inputs.values(), input = updated.next(); input && !input.done; input = updated.next()) {\n        if (this._inputs[i]._midiInput === input.value) {\n          remove = !1;\n          break;\n        }\n      }\n\n      remove && this._inputs.splice(i, 1);\n    }\n\n    this.interface && this.interface.inputs.forEach(function (nInput) {\n      for (var add = !0, j = 0; j < this._inputs.length; j++) {\n        this._inputs[j]._midiInput === nInput && (add = !1);\n      }\n\n      add && this._inputs.push(new Input(nInput));\n    }.bind(this));\n  }, WebMidi.prototype._updateOutputs = function () {\n    for (var i = 0; i < this._outputs.length; i++) {\n      for (var remove = !0, updated = this.interface.outputs.values(), output = updated.next(); output && !output.done; output = updated.next()) {\n        if (this._outputs[i]._midiOutput === output.value) {\n          remove = !1;\n          break;\n        }\n      }\n\n      remove && this._outputs.splice(i, 1);\n    }\n\n    this.interface && this.interface.outputs.forEach(function (nOutput) {\n      for (var add = !0, j = 0; j < this._outputs.length; j++) {\n        this._outputs[j]._midiOutput === nOutput && (add = !1);\n      }\n\n      add && this._outputs.push(new Output(nOutput));\n    }.bind(this));\n  }, WebMidi.prototype._onInterfaceStateChange = function (e) {\n    this._updateInputsAndOutputs();\n\n    var event = {\n      timestamp: e.timeStamp,\n      type: e.port.state\n    };\n    this.interface && \"connected\" === e.port.state ? \"output\" === e.port.type ? event.port = this.getOutputById(e.port.id) : \"input\" === e.port.type && (event.port = this.getInputById(e.port.id)) : event.port = {\n      connection: \"closed\",\n      id: e.port.id,\n      manufacturer: e.port.manufacturer,\n      name: e.port.name,\n      state: e.port.state,\n      type: e.port.type\n    }, this._userHandlers[e.port.state].forEach(function (handler) {\n      handler(event);\n    });\n  }, WebMidi.prototype._resetInterfaceUserHandlers = function () {\n    for (var i = 0; i < this._midiInterfaceEvents.length; i++) {\n      this._userHandlers[this._midiInterfaceEvents[i]] = [];\n    }\n  }, Input.prototype.on = Input.prototype.addListener = function (type, channel, listener) {\n    var that = this;\n    if (void 0 === channel && (channel = \"all\"), Array.isArray(channel) || (channel = [channel]), channel.forEach(function (item) {\n      if (\"all\" !== item && !(1 <= item && item <= 16)) throw new RangeError(\"The 'channel' parameter is invalid.\");\n    }), \"function\" != typeof listener) throw new TypeError(\"The 'listener' parameter must be a function.\");\n    if (void 0 !== wm.MIDI_SYSTEM_MESSAGES[type]) this._userHandlers.system[type] || (this._userHandlers.system[type] = []), this._userHandlers.system[type].push(listener);else {\n      if (void 0 === wm.MIDI_CHANNEL_MESSAGES[type]) throw new TypeError(\"The specified event type is not supported.\");\n\n      if (-1 < channel.indexOf(\"all\")) {\n        channel = [];\n\n        for (var j = 1; j <= 16; j++) {\n          channel.push(j);\n        }\n      }\n\n      this._userHandlers.channel[type] || (this._userHandlers.channel[type] = []), channel.forEach(function (ch) {\n        that._userHandlers.channel[type][ch] || (that._userHandlers.channel[type][ch] = []), that._userHandlers.channel[type][ch].push(listener);\n      });\n    }\n    return this;\n  }, Input.prototype.hasListener = function (type, channel, listener) {\n    var that = this;\n    if (\"function\" != typeof listener) throw new TypeError(\"The 'listener' parameter must be a function.\");\n\n    if (void 0 === channel && (channel = \"all\"), channel.constructor !== Array && (channel = [channel]), void 0 !== wm.MIDI_SYSTEM_MESSAGES[type]) {\n      for (var o = 0; o < this._userHandlers.system[type].length; o++) {\n        if (this._userHandlers.system[type][o] === listener) return !0;\n      }\n    } else if (void 0 !== wm.MIDI_CHANNEL_MESSAGES[type]) {\n      if (-1 < channel.indexOf(\"all\")) {\n        channel = [];\n\n        for (var j = 1; j <= 16; j++) {\n          channel.push(j);\n        }\n      }\n\n      return !!this._userHandlers.channel[type] && channel.every(function (chNum) {\n        var listeners = that._userHandlers.channel[type][chNum];\n        return listeners && -1 < listeners.indexOf(listener);\n      });\n    }\n\n    return !1;\n  }, Input.prototype.removeListener = function (type, channel, listener) {\n    var that = this;\n    if (void 0 !== listener && \"function\" != typeof listener) throw new TypeError(\"The 'listener' parameter must be a function.\");\n    if (void 0 === channel && (channel = \"all\"), channel.constructor !== Array && (channel = [channel]), void 0 !== wm.MIDI_SYSTEM_MESSAGES[type]) {\n      if (void 0 === listener) this._userHandlers.system[type] = [];else for (var o = 0; o < this._userHandlers.system[type].length; o++) {\n        this._userHandlers.system[type][o] === listener && this._userHandlers.system[type].splice(o, 1);\n      }\n    } else if (void 0 !== wm.MIDI_CHANNEL_MESSAGES[type]) {\n      if (-1 < channel.indexOf(\"all\")) {\n        channel = [];\n\n        for (var j = 1; j <= 16; j++) {\n          channel.push(j);\n        }\n      }\n\n      if (!this._userHandlers.channel[type]) return this;\n      channel.forEach(function (chNum) {\n        var listeners = that._userHandlers.channel[type][chNum];\n        if (listeners) if (void 0 === listener) that._userHandlers.channel[type][chNum] = [];else for (var l = 0; l < listeners.length; l++) {\n          listeners[l] === listener && listeners.splice(l, 1);\n        }\n      });\n    } else {\n      if (void 0 !== type) throw new TypeError(\"The specified event type is not supported.\");\n\n      this._initializeUserHandlers();\n    }\n    return this;\n  }, Input.prototype._initializeUserHandlers = function () {\n    for (var prop1 in wm.MIDI_CHANNEL_MESSAGES) {\n      Object.prototype.hasOwnProperty.call(wm.MIDI_CHANNEL_MESSAGES, prop1) && (this._userHandlers.channel[prop1] = {});\n    }\n\n    for (var prop2 in wm.MIDI_SYSTEM_MESSAGES) {\n      Object.prototype.hasOwnProperty.call(wm.MIDI_SYSTEM_MESSAGES, prop2) && (this._userHandlers.system[prop2] = []);\n    }\n  }, Input.prototype._onMidiMessage = function (e) {\n    if (0 < this._userHandlers.system.midimessage.length) {\n      var event = {\n        target: this,\n        data: e.data,\n        timestamp: e.timeStamp,\n        type: \"midimessage\"\n      };\n\n      this._userHandlers.system.midimessage.forEach(function (callback) {\n        callback(event);\n      });\n    }\n\n    e.data[0] < 240 ? (this._parseChannelEvent(e), this._parseNrpnEvent(e)) : e.data[0] <= 255 && this._parseSystemEvent(e);\n  }, Input.prototype._parseNrpnEvent = function (e) {\n    var data1,\n        data2,\n        command = e.data[0] >> 4,\n        channelBufferIndex = 15 & e.data[0],\n        channel = 1 + channelBufferIndex;\n\n    if (1 < e.data.length && (data1 = e.data[1], data2 = 2 < e.data.length ? e.data[2] : void 0), wm.nrpnEventsEnabled && command === wm.MIDI_CHANNEL_MESSAGES.controlchange && (data1 >= wm.MIDI_NRPN_MESSAGES.increment && data1 <= wm.MIDI_NRPN_MESSAGES.parammsb || data1 === wm.MIDI_NRPN_MESSAGES.entrymsb || data1 === wm.MIDI_NRPN_MESSAGES.entrylsb)) {\n      var ccEvent = {\n        target: this,\n        type: \"controlchange\",\n        data: e.data,\n        timestamp: e.timeStamp,\n        channel: channel,\n        controller: {\n          number: data1,\n          name: this.getCcNameByNumber(data1)\n        },\n        value: data2\n      };\n      if (ccEvent.controller.number === wm.MIDI_NRPN_MESSAGES.parammsb && ccEvent.value != wm.MIDI_NRPN_MESSAGES.nullactiveparameter) wm._nrpnBuffer[channelBufferIndex] = [], wm._nrpnBuffer[channelBufferIndex][0] = ccEvent;else if (1 === wm._nrpnBuffer[channelBufferIndex].length && ccEvent.controller.number === wm.MIDI_NRPN_MESSAGES.paramlsb) wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if (2 !== wm._nrpnBuffer[channelBufferIndex].length || ccEvent.controller.number !== wm.MIDI_NRPN_MESSAGES.increment && ccEvent.controller.number !== wm.MIDI_NRPN_MESSAGES.decrement && ccEvent.controller.number !== wm.MIDI_NRPN_MESSAGES.entrymsb) {\n        if (3 === wm._nrpnBuffer[channelBufferIndex].length && wm._nrpnBuffer[channelBufferIndex][2].number === wm.MIDI_NRPN_MESSAGES.entrymsb && ccEvent.controller.number === wm.MIDI_NRPN_MESSAGES.entrylsb) wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if (3 <= wm._nrpnBuffer[channelBufferIndex].length && wm._nrpnBuffer[channelBufferIndex].length <= 4 && ccEvent.controller.number === wm.MIDI_NRPN_MESSAGES.parammsb && ccEvent.value === wm.MIDI_NRPN_MESSAGES.nullactiveparameter) wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if (4 <= wm._nrpnBuffer[channelBufferIndex].length && wm._nrpnBuffer[channelBufferIndex].length <= 5 && ccEvent.controller.number === wm.MIDI_NRPN_MESSAGES.paramlsb && ccEvent.value === wm.MIDI_NRPN_MESSAGES.nullactiveparameter) {\n          wm._nrpnBuffer[channelBufferIndex].push(ccEvent);\n\n          var rawData = [];\n\n          wm._nrpnBuffer[channelBufferIndex].forEach(function (ev) {\n            rawData.push(ev.data);\n          });\n\n          var nrpnNumber = wm._nrpnBuffer[channelBufferIndex][0].value << 7 | wm._nrpnBuffer[channelBufferIndex][1].value,\n              nrpnValue = wm._nrpnBuffer[channelBufferIndex][2].value;\n          6 === wm._nrpnBuffer[channelBufferIndex].length && (nrpnValue = wm._nrpnBuffer[channelBufferIndex][2].value << 7 | wm._nrpnBuffer[channelBufferIndex][3].value);\n          var nrpnControllerType = \"\";\n\n          switch (wm._nrpnBuffer[channelBufferIndex][2].controller.number) {\n            case wm.MIDI_NRPN_MESSAGES.entrymsb:\n              nrpnControllerType = wm._nrpnTypes[0];\n              break;\n\n            case wm.MIDI_NRPN_MESSAGES.increment:\n              nrpnControllerType = wm._nrpnTypes[1];\n              break;\n\n            case wm.MIDI_NRPN_MESSAGES.decrement:\n              nrpnControllerType = wm._nrpnTypes[2];\n              break;\n\n            default:\n              throw new Error(\"The NPRN type was unidentifiable.\");\n          }\n\n          var nrpnEvent = {\n            timestamp: ccEvent.timestamp,\n            channel: ccEvent.channel,\n            type: \"nrpn\",\n            data: rawData,\n            controller: {\n              number: nrpnNumber,\n              type: nrpnControllerType,\n              name: \"Non-Registered Parameter \" + nrpnNumber\n            },\n            value: nrpnValue\n          };\n          wm._nrpnBuffer[channelBufferIndex] = [], this._userHandlers.channel[nrpnEvent.type] && this._userHandlers.channel[nrpnEvent.type][nrpnEvent.channel] && this._userHandlers.channel[nrpnEvent.type][nrpnEvent.channel].forEach(function (callback) {\n            callback(nrpnEvent);\n          });\n        } else wm._nrpnBuffer[channelBufferIndex] = [];\n      } else wm._nrpnBuffer[channelBufferIndex].push(ccEvent);\n    }\n  }, Input.prototype._parseChannelEvent = function (e) {\n    var data1,\n        data2,\n        command = e.data[0] >> 4,\n        channel = 1 + (15 & e.data[0]);\n    1 < e.data.length && (data1 = e.data[1], data2 = 2 < e.data.length ? e.data[2] : void 0);\n    var event = {\n      target: this,\n      data: e.data,\n      timestamp: e.timeStamp,\n      channel: channel\n    };\n    command === wm.MIDI_CHANNEL_MESSAGES.noteoff || command === wm.MIDI_CHANNEL_MESSAGES.noteon && 0 === data2 ? (event.type = \"noteoff\", event.note = {\n      number: data1,\n      name: wm._notes[data1 % 12],\n      octave: wm.getOctave(data1)\n    }, event.velocity = data2 / 127, event.rawVelocity = data2) : command === wm.MIDI_CHANNEL_MESSAGES.noteon ? (event.type = \"noteon\", event.note = {\n      number: data1,\n      name: wm._notes[data1 % 12],\n      octave: wm.getOctave(data1)\n    }, event.velocity = data2 / 127, event.rawVelocity = data2) : command === wm.MIDI_CHANNEL_MESSAGES.keyaftertouch ? (event.type = \"keyaftertouch\", event.note = {\n      number: data1,\n      name: wm._notes[data1 % 12],\n      octave: wm.getOctave(data1)\n    }, event.value = data2 / 127) : command === wm.MIDI_CHANNEL_MESSAGES.controlchange && 0 <= data1 && data1 <= 119 ? (event.type = \"controlchange\", event.controller = {\n      number: data1,\n      name: this.getCcNameByNumber(data1)\n    }, event.value = data2) : command === wm.MIDI_CHANNEL_MESSAGES.channelmode && 120 <= data1 && data1 <= 127 ? (event.type = \"channelmode\", event.controller = {\n      number: data1,\n      name: this.getChannelModeByNumber(data1)\n    }, event.value = data2) : command === wm.MIDI_CHANNEL_MESSAGES.programchange ? (event.type = \"programchange\", event.value = data1) : command === wm.MIDI_CHANNEL_MESSAGES.channelaftertouch ? (event.type = \"channelaftertouch\", event.value = data1 / 127) : command === wm.MIDI_CHANNEL_MESSAGES.pitchbend ? (event.type = \"pitchbend\", event.value = ((data2 << 7) + data1 - 8192) / 8192) : event.type = \"unknownchannelmessage\", this._userHandlers.channel[event.type] && this._userHandlers.channel[event.type][channel] && this._userHandlers.channel[event.type][channel].forEach(function (callback) {\n      callback(event);\n    });\n  }, Input.prototype.getCcNameByNumber = function (number) {\n    if (!(0 <= (number = Math.floor(number)) && number <= 119)) throw new RangeError(\"The control change number must be between 0 and 119.\");\n\n    for (var cc in wm.MIDI_CONTROL_CHANGE_MESSAGES) {\n      if (Object.prototype.hasOwnProperty.call(wm.MIDI_CONTROL_CHANGE_MESSAGES, cc) && number === wm.MIDI_CONTROL_CHANGE_MESSAGES[cc]) return cc;\n    }\n  }, Input.prototype.getChannelModeByNumber = function (number) {\n    if (!(120 <= (number = Math.floor(number)) && status <= 127)) throw new RangeError(\"The control change number must be between 120 and 127.\");\n\n    for (var cm in wm.MIDI_CHANNEL_MODE_MESSAGES) {\n      if (Object.prototype.hasOwnProperty.call(wm.MIDI_CHANNEL_MODE_MESSAGES, cm) && number === wm.MIDI_CHANNEL_MODE_MESSAGES[cm]) return cm;\n    }\n  }, Input.prototype._parseSystemEvent = function (e) {\n    var command = e.data[0],\n        event = {\n      target: this,\n      data: e.data,\n      timestamp: e.timeStamp\n    };\n    command === wm.MIDI_SYSTEM_MESSAGES.sysex ? event.type = \"sysex\" : command === wm.MIDI_SYSTEM_MESSAGES.timecode ? event.type = \"timecode\" : command === wm.MIDI_SYSTEM_MESSAGES.songposition ? event.type = \"songposition\" : command === wm.MIDI_SYSTEM_MESSAGES.songselect ? (event.type = \"songselect\", event.song = e.data[1]) : command === wm.MIDI_SYSTEM_MESSAGES.tuningrequest ? event.type = \"tuningrequest\" : command === wm.MIDI_SYSTEM_MESSAGES.clock ? event.type = \"clock\" : command === wm.MIDI_SYSTEM_MESSAGES.start ? event.type = \"start\" : command === wm.MIDI_SYSTEM_MESSAGES.continue ? event.type = \"continue\" : command === wm.MIDI_SYSTEM_MESSAGES.stop ? event.type = \"stop\" : command === wm.MIDI_SYSTEM_MESSAGES.activesensing ? event.type = \"activesensing\" : command === wm.MIDI_SYSTEM_MESSAGES.reset ? event.type = \"reset\" : event.type = \"unknownsystemmessage\", this._userHandlers.system[event.type] && this._userHandlers.system[event.type].forEach(function (callback) {\n      callback(event);\n    });\n  }, Output.prototype.send = function (status, data, timestamp) {\n    if (!(128 <= status && status <= 255)) throw new RangeError(\"The status byte must be an integer between 128 (0x80) and 255 (0xFF).\");\n    void 0 === data && (data = []), Array.isArray(data) || (data = [data]);\n    var message = [];\n    return data.forEach(function (item) {\n      var parsed = Math.floor(item);\n      if (!(0 <= parsed && parsed <= 255)) throw new RangeError(\"Data bytes must be integers between 0 (0x00) and 255 (0xFF).\");\n      message.push(parsed);\n    }), this._midiOutput.send([status].concat(message), parseFloat(timestamp) || 0), this;\n  }, Output.prototype.sendSysex = function (manufacturer, data, options) {\n    if (!wm.sysexEnabled) throw new Error(\"Sysex message support must first be activated.\");\n    return options = options || {}, manufacturer = [].concat(manufacturer), data.forEach(function (item) {\n      if (item < 0 || 127 < item) throw new RangeError(\"The data bytes of a sysex message must be integers between 0 (0x00) and 127 (0x7F).\");\n    }), data = manufacturer.concat(data, wm.MIDI_SYSTEM_MESSAGES.sysexend), this.send(wm.MIDI_SYSTEM_MESSAGES.sysex, data, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendTimecodeQuarterFrame = function (value, options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.timecode, value, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendSongPosition = function (value, options) {\n    options = options || {};\n    var msb = (value = Math.floor(value) || 0) >> 7 & 127,\n        lsb = 127 & value;\n    return this.send(wm.MIDI_SYSTEM_MESSAGES.songposition, [msb, lsb], this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendSongSelect = function (value, options) {\n    if (options = options || {}, !(0 <= (value = Math.floor(value)) && value <= 127)) throw new RangeError(\"The song number must be between 0 and 127.\");\n    return this.send(wm.MIDI_SYSTEM_MESSAGES.songselect, [value], this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendTuningRequest = function (options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.tuningrequest, void 0, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendClock = function (options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.clock, void 0, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendStart = function (options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.start, void 0, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendContinue = function (options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.continue, void 0, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendStop = function (options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.stop, void 0, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendActiveSensing = function (options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.activesensing, [], this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.sendReset = function (options) {\n    return options = options || {}, this.send(wm.MIDI_SYSTEM_MESSAGES.reset, void 0, this._parseTimeParameter(options.time)), this;\n  }, Output.prototype.stopNote = function (note, channel, options) {\n    if (\"all\" === note) return this.sendChannelMode(\"allnotesoff\", 0, channel, options);\n    var nVelocity = 64;\n    return (options = options || {}).rawVelocity ? !isNaN(options.velocity) && 0 <= options.velocity && options.velocity <= 127 && (nVelocity = options.velocity) : !isNaN(options.velocity) && 0 <= options.velocity && options.velocity <= 1 && (nVelocity = 127 * options.velocity), this._convertNoteToArray(note).forEach(function (item) {\n      wm.toMIDIChannels(channel).forEach(function (ch) {\n        this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff << 4) + (ch - 1), [item, Math.round(nVelocity)], this._parseTimeParameter(options.time));\n      }.bind(this));\n    }.bind(this)), this;\n  }, Output.prototype.playNote = function (note, channel, options) {\n    var time,\n        nVelocity = 64;\n\n    if ((options = options || {}).rawVelocity ? !isNaN(options.velocity) && 0 <= options.velocity && options.velocity <= 127 && (nVelocity = options.velocity) : !isNaN(options.velocity) && 0 <= options.velocity && options.velocity <= 1 && (nVelocity = 127 * options.velocity), time = this._parseTimeParameter(options.time), this._convertNoteToArray(note).forEach(function (item) {\n      wm.toMIDIChannels(channel).forEach(function (ch) {\n        this.send((wm.MIDI_CHANNEL_MESSAGES.noteon << 4) + (ch - 1), [item, Math.round(nVelocity)], time);\n      }.bind(this));\n    }.bind(this)), !isNaN(options.duration)) {\n      options.duration <= 0 && (options.duration = 0);\n      var nRelease = 64;\n      options.rawVelocity ? !isNaN(options.release) && 0 <= options.release && options.release <= 127 && (nRelease = options.release) : !isNaN(options.release) && 0 <= options.release && options.release <= 1 && (nRelease = 127 * options.release), this._convertNoteToArray(note).forEach(function (item) {\n        wm.toMIDIChannels(channel).forEach(function (ch) {\n          this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff << 4) + (ch - 1), [item, Math.round(nRelease)], (time || wm.time) + options.duration);\n        }.bind(this));\n      }.bind(this));\n    }\n\n    return this;\n  }, Output.prototype.sendKeyAftertouch = function (note, channel, pressure, options) {\n    var that = this;\n    if (options = options || {}, channel < 1 || 16 < channel) throw new RangeError(\"The channel must be between 1 and 16.\");\n    (isNaN(pressure) || pressure < 0 || 1 < pressure) && (pressure = .5);\n    var nPressure = Math.round(127 * pressure);\n    return this._convertNoteToArray(note).forEach(function (item) {\n      wm.toMIDIChannels(channel).forEach(function (ch) {\n        that.send((wm.MIDI_CHANNEL_MESSAGES.keyaftertouch << 4) + (ch - 1), [item, nPressure], that._parseTimeParameter(options.time));\n      });\n    }), this;\n  }, Output.prototype.sendControlChange = function (controller, value, channel, options) {\n    if (options = options || {}, \"string\" == typeof controller) {\n      if (void 0 === (controller = wm.MIDI_CONTROL_CHANGE_MESSAGES[controller])) throw new TypeError(\"Invalid controller name.\");\n    } else if (!(0 <= (controller = Math.floor(controller)) && controller <= 119)) throw new RangeError(\"Controller numbers must be between 0 and 119.\");\n\n    if (!(0 <= (value = Math.floor(value) || 0) && value <= 127)) throw new RangeError(\"Controller value must be between 0 and 127.\");\n    return wm.toMIDIChannels(channel).forEach(function (ch) {\n      this.send((wm.MIDI_CHANNEL_MESSAGES.controlchange << 4) + (ch - 1), [controller, value], this._parseTimeParameter(options.time));\n    }.bind(this)), this;\n  }, Output.prototype._selectRegisteredParameter = function (parameter, channel, time) {\n    var that = this;\n    if (parameter[0] = Math.floor(parameter[0]), !(0 <= parameter[0] && parameter[0] <= 127)) throw new RangeError(\"The control65 value must be between 0 and 127\");\n    if (parameter[1] = Math.floor(parameter[1]), !(0 <= parameter[1] && parameter[1] <= 127)) throw new RangeError(\"The control64 value must be between 0 and 127\");\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.sendControlChange(101, parameter[0], channel, {\n        time: time\n      }), that.sendControlChange(100, parameter[1], channel, {\n        time: time\n      });\n    }), this;\n  }, Output.prototype._selectNonRegisteredParameter = function (parameter, channel, time) {\n    var that = this;\n    if (parameter[0] = Math.floor(parameter[0]), !(0 <= parameter[0] && parameter[0] <= 127)) throw new RangeError(\"The control63 value must be between 0 and 127\");\n    if (parameter[1] = Math.floor(parameter[1]), !(0 <= parameter[1] && parameter[1] <= 127)) throw new RangeError(\"The control62 value must be between 0 and 127\");\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.sendControlChange(99, parameter[0], channel, {\n        time: time\n      }), that.sendControlChange(98, parameter[1], channel, {\n        time: time\n      });\n    }), this;\n  }, Output.prototype._setCurrentRegisteredParameter = function (data, channel, time) {\n    var that = this;\n    if ((data = [].concat(data))[0] = Math.floor(data[0]), !(0 <= data[0] && data[0] <= 127)) throw new RangeError(\"The msb value must be between 0 and 127\");\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.sendControlChange(6, data[0], channel, {\n        time: time\n      });\n    }), data[1] = Math.floor(data[1]), 0 <= data[1] && data[1] <= 127 && wm.toMIDIChannels(channel).forEach(function () {\n      that.sendControlChange(38, data[1], channel, {\n        time: time\n      });\n    }), this;\n  }, Output.prototype._deselectRegisteredParameter = function (channel, time) {\n    var that = this;\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.sendControlChange(101, 127, channel, {\n        time: time\n      }), that.sendControlChange(100, 127, channel, {\n        time: time\n      });\n    }), this;\n  }, Output.prototype.setRegisteredParameter = function (parameter, data, channel, options) {\n    var that = this;\n\n    if (options = options || {}, !Array.isArray(parameter)) {\n      if (!wm.MIDI_REGISTERED_PARAMETER[parameter]) throw new Error(\"The specified parameter is not available.\");\n      parameter = wm.MIDI_REGISTERED_PARAMETER[parameter];\n    }\n\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that._selectRegisteredParameter(parameter, channel, options.time), that._setCurrentRegisteredParameter(data, channel, options.time), that._deselectRegisteredParameter(channel, options.time);\n    }), this;\n  }, Output.prototype.setNonRegisteredParameter = function (parameter, data, channel, options) {\n    var that = this;\n    if (options = options || {}, !(0 <= parameter[0] && parameter[0] <= 127 && 0 <= parameter[1] && parameter[1] <= 127)) throw new Error(\"Position 0 and 1 of the 2-position parameter array must both be between 0 and 127.\");\n    return data = [].concat(data), wm.toMIDIChannels(channel).forEach(function () {\n      that._selectNonRegisteredParameter(parameter, channel, options.time), that._setCurrentRegisteredParameter(data, channel, options.time), that._deselectRegisteredParameter(channel, options.time);\n    }), this;\n  }, Output.prototype.incrementRegisteredParameter = function (parameter, channel, options) {\n    var that = this;\n\n    if (options = options || {}, !Array.isArray(parameter)) {\n      if (!wm.MIDI_REGISTERED_PARAMETER[parameter]) throw new Error(\"The specified parameter is not available.\");\n      parameter = wm.MIDI_REGISTERED_PARAMETER[parameter];\n    }\n\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that._selectRegisteredParameter(parameter, channel, options.time), that.sendControlChange(96, 0, channel, {\n        time: options.time\n      }), that._deselectRegisteredParameter(channel, options.time);\n    }), this;\n  }, Output.prototype.decrementRegisteredParameter = function (parameter, channel, options) {\n    if (options = options || {}, !Array.isArray(parameter)) {\n      if (!wm.MIDI_REGISTERED_PARAMETER[parameter]) throw new TypeError(\"The specified parameter is not available.\");\n      parameter = wm.MIDI_REGISTERED_PARAMETER[parameter];\n    }\n\n    return wm.toMIDIChannels(channel).forEach(function () {\n      this._selectRegisteredParameter(parameter, channel, options.time), this.sendControlChange(97, 0, channel, {\n        time: options.time\n      }), this._deselectRegisteredParameter(channel, options.time);\n    }.bind(this)), this;\n  }, Output.prototype.setPitchBendRange = function (semitones, cents, channel, options) {\n    var that = this;\n    if (options = options || {}, !(0 <= (semitones = Math.floor(semitones) || 0) && semitones <= 127)) throw new RangeError(\"The semitones value must be between 0 and 127\");\n    if (!(0 <= (cents = Math.floor(cents) || 0) && cents <= 127)) throw new RangeError(\"The cents value must be between 0 and 127\");\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.setRegisteredParameter(\"pitchbendrange\", [semitones, cents], channel, {\n        time: options.time\n      });\n    }), this;\n  }, Output.prototype.setModulationRange = function (semitones, cents, channel, options) {\n    var that = this;\n    if (options = options || {}, !(0 <= (semitones = Math.floor(semitones) || 0) && semitones <= 127)) throw new RangeError(\"The semitones value must be between 0 and 127\");\n    if (!(0 <= (cents = Math.floor(cents) || 0) && cents <= 127)) throw new RangeError(\"The cents value must be between 0 and 127\");\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.setRegisteredParameter(\"modulationrange\", [semitones, cents], channel, {\n        time: options.time\n      });\n    }), this;\n  }, Output.prototype.setMasterTuning = function (value, channel, options) {\n    var that = this;\n    if (options = options || {}, (value = parseFloat(value) || 0) <= -65 || 64 <= value) throw new RangeError(\"The value must be a decimal number larger than -65 and smaller than 64.\");\n    var coarse = Math.floor(value) + 64,\n        fine = value - Math.floor(value),\n        msb = (fine = Math.round((fine + 1) / 2 * 16383)) >> 7 & 127,\n        lsb = 127 & fine;\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.setRegisteredParameter(\"channelcoarsetuning\", coarse, channel, {\n        time: options.time\n      }), that.setRegisteredParameter(\"channelfinetuning\", [msb, lsb], channel, {\n        time: options.time\n      });\n    }), this;\n  }, Output.prototype.setTuningProgram = function (value, channel, options) {\n    var that = this;\n    if (options = options || {}, !(0 <= (value = Math.floor(value)) && value <= 127)) throw new RangeError(\"The program value must be between 0 and 127\");\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.setRegisteredParameter(\"tuningprogram\", value, channel, {\n        time: options.time\n      });\n    }), this;\n  }, Output.prototype.setTuningBank = function (value, channel, options) {\n    var that = this;\n    if (options = options || {}, !(0 <= (value = Math.floor(value) || 0) && value <= 127)) throw new RangeError(\"The bank value must be between 0 and 127\");\n    return wm.toMIDIChannels(channel).forEach(function () {\n      that.setRegisteredParameter(\"tuningbank\", value, channel, {\n        time: options.time\n      });\n    }), this;\n  }, Output.prototype.sendChannelMode = function (command, value, channel, options) {\n    if (options = options || {}, \"string\" == typeof command) {\n      if (!(command = wm.MIDI_CHANNEL_MODE_MESSAGES[command])) throw new TypeError(\"Invalid channel mode message name.\");\n    } else if (!(120 <= (command = Math.floor(command)) && command <= 127)) throw new RangeError(\"Channel mode numerical identifiers must be between 120 and 127.\");\n\n    if ((value = Math.floor(value) || 0) < 0 || 127 < value) throw new RangeError(\"Value must be an integer between 0 and 127.\");\n    return wm.toMIDIChannels(channel).forEach(function (ch) {\n      this.send((wm.MIDI_CHANNEL_MESSAGES.channelmode << 4) + (ch - 1), [command, value], this._parseTimeParameter(options.time));\n    }.bind(this)), this;\n  }, Output.prototype.sendProgramChange = function (program, channel, options) {\n    var that = this;\n    if (options = options || {}, program = Math.floor(program), isNaN(program) || program < 0 || 127 < program) throw new RangeError(\"Program numbers must be between 0 and 127.\");\n    return wm.toMIDIChannels(channel).forEach(function (ch) {\n      that.send((wm.MIDI_CHANNEL_MESSAGES.programchange << 4) + (ch - 1), [program], that._parseTimeParameter(options.time));\n    }), this;\n  }, Output.prototype.sendChannelAftertouch = function (pressure, channel, options) {\n    var that = this;\n    options = options || {}, pressure = parseFloat(pressure), (isNaN(pressure) || pressure < 0 || 1 < pressure) && (pressure = .5);\n    var nPressure = Math.round(127 * pressure);\n    return wm.toMIDIChannels(channel).forEach(function (ch) {\n      that.send((wm.MIDI_CHANNEL_MESSAGES.channelaftertouch << 4) + (ch - 1), [nPressure], that._parseTimeParameter(options.time));\n    }), this;\n  }, Output.prototype.sendPitchBend = function (bend, channel, options) {\n    var that = this;\n    if (options = options || {}, isNaN(bend) || bend < -1 || 1 < bend) throw new RangeError(\"Pitch bend value must be between -1 and 1.\");\n    var nLevel = Math.round((bend + 1) / 2 * 16383),\n        msb = nLevel >> 7 & 127,\n        lsb = 127 & nLevel;\n    return wm.toMIDIChannels(channel).forEach(function (ch) {\n      that.send((wm.MIDI_CHANNEL_MESSAGES.pitchbend << 4) + (ch - 1), [lsb, msb], that._parseTimeParameter(options.time));\n    }), this;\n  }, Output.prototype._parseTimeParameter = function (time) {\n    var value,\n        parsed = parseFloat(time);\n    return \"string\" == typeof time && \"+\" === time.substring(0, 1) ? parsed && 0 < parsed && (value = wm.time + parsed) : parsed > wm.time && (value = parsed), value;\n  }, Output.prototype._convertNoteToArray = function (note) {\n    var notes = [];\n    return Array.isArray(note) || (note = [note]), note.forEach(function (item) {\n      notes.push(wm.guessNoteNumber(item));\n    }), notes;\n  }, \"function\" == typeof define && \"object\" == typeof define.amd ? define([], function () {\n    return wm;\n  }) : \"undefined\" != typeof module && module.exports ? module.exports = wm : scope.WebMidi || (scope.WebMidi = wm);\n}(this);","/*! js-cookie v3.0.1 | MIT */\n\n/* eslint-disable no-var */\nfunction assign(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\n\nvar defaultConverter = {\n  read: function read(value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n  },\n  write: function write(value) {\n    return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init(converter, defaultAttributes) {\n  function set(key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n    var stringifiedAttributes = '';\n\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue;\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue;\n      } // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n\n\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return document.cookie = key + '=' + converter.write(value, key) + stringifiedAttributes;\n  }\n\n  function get(key) {\n    if (typeof document === 'undefined' || arguments.length && !key) {\n      return;\n    } // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n\n\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break;\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar;\n  }\n\n  return Object.create({\n    set: set,\n    get: get,\n    remove: function remove(key, attributes) {\n      set(key, '', assign({}, attributes, {\n        expires: -1\n      }));\n    },\n    withAttributes: function withAttributes(attributes) {\n      return init(this.converter, assign({}, this.attributes, attributes));\n    },\n    withConverter: function withConverter(converter) {\n      return init(assign({}, this.converter, converter), this.attributes);\n    }\n  }, {\n    attributes: {\n      value: Object.freeze(defaultAttributes)\n    },\n    converter: {\n      value: Object.freeze(converter)\n    }\n  });\n}\n\nvar api = init(defaultConverter, {\n  path: '/'\n});\n/* eslint-enable no-var */\n\nexport default api;","\nexport const midiKeyNames = [\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"D#\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"G#\",\n  \"A\",\n  \"A#\",\n  \"B\",\n] as const;\n\nexport const octaves = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9] as const;\n\nexport const keyboardKeyNames = [\n  \"C-1\",\n  \"C#-1\",\n  \"D-1\",\n  \"D#-1\",\n  \"E-1\",\n  \"F-1\",\n  \"F#-1\",\n  \"G-1\",\n  \"G#-1\",\n  \"A-1\",\n  \"A#-1\",\n  \"B-1\",\n  \"C0\",\n  \"C#0\",\n  \"D0\",\n  \"D#0\",\n  \"E0\",\n  \"F0\",\n  \"F#0\",\n  \"G0\",\n  \"G#0\",\n  \"A0\",\n  \"A#0\",\n  \"B0\",\n  \"C1\",\n  \"C#1\",\n  \"D1\",\n  \"D#1\",\n  \"E1\",\n  \"F1\",\n  \"F#1\",\n  \"G1\",\n  \"G#1\",\n  \"A1\",\n  \"A#1\",\n  \"B1\",\n  \"C2\",\n  \"C#2\",\n  \"D2\",\n  \"D#2\",\n  \"E2\",\n  \"F2\",\n  \"F#2\",\n  \"G2\",\n  \"G#2\",\n  \"A2\",\n  \"A#2\",\n  \"B2\",\n  \"C3\",\n  \"C#3\",\n  \"D3\",\n  \"D#3\",\n  \"E3\",\n  \"F3\",\n  \"F#3\",\n  \"G3\",\n  \"G#3\",\n  \"A3\",\n  \"A#3\",\n  \"B3\",\n  \"C4\",\n  \"C#4\",\n  \"D4\",\n  \"D#4\",\n  \"E4\",\n  \"F4\",\n  \"F#4\",\n  \"G4\",\n  \"G#4\",\n  \"A4\",\n  \"A#4\",\n  \"B4\",\n  \"C5\",\n  \"C#5\",\n  \"D5\",\n  \"D#5\",\n  \"E5\",\n  \"F5\",\n  \"F#5\",\n  \"G5\",\n  \"G#5\",\n  \"A5\",\n  \"A#5\",\n  \"B5\",\n  \"C6\",\n  \"C#6\",\n  \"D6\",\n  \"D#6\",\n  \"E6\",\n  \"F6\",\n  \"F#6\",\n  \"G6\",\n  \"G#6\",\n  \"A6\",\n  \"A#6\",\n  \"B6\",\n  \"C7\",\n  \"C#7\",\n  \"D7\",\n  \"D#7\",\n  \"E7\",\n  \"F7\",\n  \"F#7\",\n  \"G7\",\n  \"G#7\",\n  \"A7\",\n  \"A#7\",\n  \"B7\",\n  \"C8\",\n  \"C#8\",\n  \"D8\",\n  \"D#8\",\n  \"E8\",\n  \"F8\",\n  \"F#8\",\n  \"G8\",\n  \"G#8\",\n  \"A8\",\n  \"A#8\",\n  \"B8\",\n  \"C9\",\n  \"C#9\",\n  \"D9\",\n  \"D#9\",\n  \"E9\",\n  \"F9\",\n  \"F#9\",\n  \"G9\",\n  \"G#9\",\n  \"A9\",\n  \"A#9\",\n  \"B9\",\n] as const;\n","import { FormattedMessage } from \"gatsby-plugin-intl\";\nimport Cookies from \"js-cookie\";\nimport React, { useEffect, useState } from \"react\";\nimport WebMidi, { Input } from \"webmidi\";\n\nimport { Layout, SEO, Staff } from \"components\";\nimport { midiKeyNames } from \"utils/midi\";\nimport classNames from \"classnames\";\n\nimport \"./notes-on-the-staff.css\";\n\n// https://commons.wikimedia.org/wiki/Category:Musical_score_components\n// https://commons.wikimedia.org/wiki/Template:Music\n\nconst IndexPage = () => {\n  const [inputDeviceList, setInputDeviceList] = useState([] as Input[]);\n  const [selectedInputDevice, setSelectedInputDevice] = useState(\n    Cookies.get(\"selectedMidiInputDevice\")\n  );\n  const [midiEnabled, setMidiEnabled] = useState(false);\n  const [midiNote, setMidiNote] = useState(\"\");\n  const [requestedKey, setRequestedKey] = useState(\"\");\n  const [randomNote, setRandomNote] = useState({});\n  const [successState, setSuccessState] = useState(false);\n  const [practiceCount, setPracticeCount] = useState(0);\n\n  const startIndex = 60; // For MIDI, middle C is always note number 60 even though it may be another pitch or described by a different octave designation - C3, C4 or C5.\n  // MIDI standard is only that note 60 is middle C\n  // TODO use midi note numbers instead of note names (octave numbering can differ by manufacturers\n  // limit are the 128 notes of MIDI range of 0-127\n\n  const scaleCMajor = {\n    midiKey: \"C\",\n    steps: [2, 2, 1, 2, 2, 2, 1],\n  };\n  const scaleGMajor = {\n    midiKey: \"G\",\n    steps: [2, 2, 1, 2, 2, 2, 1],\n  };\n\n  function getOrderedKeyNames(midiKey) {\n    const sliceIndex = midiKeyNames.indexOf(midiKey);\n    const endindex = midiKeyNames.length;\n    const orderedKeyNames = midiKeyNames.slice(sliceIndex, endindex);\n    return orderedKeyNames.concat(...midiKeyNames.slice(0, sliceIndex));\n  }\n\n  function getScaleKeyNames(scale) {\n    const keys = [scale.midiKey]; // TODO add proper indexing\n    const orderedKeyNames = getOrderedKeyNames(scale.midiKey);\n    scale.steps.reduce((previousValue, currentValue) => {\n      keys.push(orderedKeyNames[previousValue]);\n      return previousValue + currentValue;\n    });\n    return keys;\n  }\n\n  function getRandomNote({ scale, cleff }) {\n    let minIndex = 6; // index of the note on the staff svg, from top to bottom\n    let maxIndex = 18;\n\n    if (cleff === \"bass\") {\n      minIndex = 13; // index of the note on the staff svg, from top to bottom\n      maxIndex = 34;\n    }\n    const randomIndex = Math.floor(\n      Math.random() * (maxIndex - minIndex + 1) + minIndex\n    );\n    const keyIndex = startIndex - randomIndex;\n    const octave = Math.floor(keyIndex / 7) - 2;\n    const noteKeyName = scale[keyIndex % 7];\n    setRequestedKey(noteKeyName + octave);\n    setRandomNote({ noteIndex: randomIndex, cleff });\n  }\n\n  function createTask() {\n    setPracticeCount(practiceCount + 1);\n\n    const scale = getScaleKeyNames(scaleCMajor); // TODO make it dynamic\n\n    const randomCleff = Math.random() > 0.5 ? \"treble\" : \"bass\";\n    getRandomNote({ scale, cleff: randomCleff });\n  }\n\n  useEffect(() => {\n    // TODO if the random note is the same, no update happens\n    if (requestedKey === midiNote) {\n      setSuccessState(true);\n    } else {\n      setSuccessState(false);\n    }\n  }, [successState]);\n\n  useEffect(() => {\n    // TODO if the random note is the same, no update happens\n    if (requestedKey === midiNote) {\n      createTask();\n    }\n  }, [midiNote, practiceCount]);\n\n  useEffect(() => {\n    WebMidi.enable(function (err) {\n      if (err) {\n        console.log(\"WebMidi could not be enabled.\", err);\n      } else {\n        console.log(\"WebMidi enabled!\");\n        setMidiEnabled(true);\n        createTask();\n      }\n      // Viewing available inputs and outputs\n      if (WebMidi.inputs.length) {\n        // TODO temp\n        setInputDeviceList(WebMidi.inputs);\n      }\n      // console.log(WebMidi.outputs);\n\n      // Reacting when a new device becomes available\n      WebMidi.addListener(\"connected\", function (e) {\n        if (selectedInputDevice) {\n          setInput(selectedInputDevice);\n        }\n        // console.log(\"connected\", e.port.name);\n      });\n\n      // Reacting when a device becomes unavailable\n      WebMidi.addListener(\"disconnected\", function (e) {\n        // TODO display warning\n        // console.log(e);\n      });\n\n      // Display the current time\n      // console.log(WebMidi.time);\n    });\n  }, [inputDeviceList]);\n\n  function setInput(inputId: string) {\n    Cookies.set(\"selectedMidiInputDevice\", inputId, { expires: 365 });\n\n    var input = WebMidi.getInputById(inputId);\n    setSelectedInputDevice(inputId);\n\n    if (input && midiEnabled) {\n      input.addListener(\"noteon\", \"all\", function (e) {\n        console.log(e);\n        // TODO all props, array of keys\n        // keyName = e.note.name + e.note.octave;\n        setMidiNote(e.note.name + e.note.octave);\n      });\n    }\n  }\n\n  if (!midiEnabled) {\n    return <div>Error TODO</div>;\n  }\n\n  return (\n    <Layout className=\"home\">\n      <SEO title=\"TODO\" />\n      <h1>learn notes</h1>\n\n      <section>\n        <div className=\"requestedKeyName\">\n          <FormattedMessage\n            id=\"staff.requestedKey\"\n            defaultMessage=\"Requested Key\"\n          />\n          <span className=\"keyName\">{requestedKey}</span>\n        </div>\n        <div className=\"lastKeyName\">\n          <FormattedMessage\n            id=\"staff.pressedKey\"\n            defaultMessage=\"Pressed Key\"\n          />\n          <span className=\"keyName\">{midiNote}</span>\n        </div>\n        <div className=\"practiceCount\">\n          <FormattedMessage\n            id=\"staff.pressedKey\"\n            defaultMessage=\"Pressed Key\"\n          />\n          <span className=\"counter\">{practiceCount}</span>\n        </div>\n        <Staff note={randomNote} />\n        <div\n          className={classNames(\n            \"result\",\n            successState ? \"success\" : \"result error\"\n          )}\n        >\n          {successState ? \"success\" : \"error\"}\n        </div>\n      </section>\n      <section className=\"devices\">\n        <h3>Available devices</h3>\n        <div className=\"inputDeviceList\">\n          {inputDeviceList.map((device) => {\n            return (\n              <div\n                className=\"inputDeviceList__item\"\n                key={device.id}\n                id={device.id}\n              >\n                <input\n                  type=\"radio\"\n                  id={device.name}\n                  name=\"midiInput\"\n                  value={device.id}\n                  checked={device.id === selectedInputDevice}\n                  onChange={() => setInput(device.id)}\n                />\n                <label htmlFor={device.name}>{device.name}</label>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["scope","WebMidi","prototype","_singleton","Error","this","_inputs","_outputs","_userHandlers","_stateChangeQueue","_processingStateChange","_midiInterfaceEvents","_nrpnBuffer","_nrpnEventsEnabled","_nrpnTypes","_notes","_semitones","C","D","E","F","G","A","B","Object","defineProperties","MIDI_SYSTEM_MESSAGES","value","sysex","timecode","songposition","songselect","tuningrequest","sysexend","clock","start","continue","stop","activesensing","reset","midimessage","unknownsystemmessage","writable","enumerable","configurable","MIDI_CHANNEL_MESSAGES","noteoff","noteon","keyaftertouch","controlchange","channelmode","nrpn","programchange","channelaftertouch","pitchbend","MIDI_REGISTERED_PARAMETER","pitchbendrange","channelfinetuning","channelcoarsetuning","tuningprogram","tuningbank","modulationrange","azimuthangle","elevationangle","gain","distanceratio","maximumdistance","maximumdistancegain","referencedistanceratio","panspreadangle","rollangle","MIDI_CONTROL_CHANGE_MESSAGES","bankselectcoarse","modulationwheelcoarse","breathcontrollercoarse","footcontrollercoarse","portamentotimecoarse","dataentrycoarse","volumecoarse","balancecoarse","pancoarse","expressioncoarse","effectcontrol1coarse","effectcontrol2coarse","generalpurposeslider1","generalpurposeslider2","generalpurposeslider3","generalpurposeslider4","bankselectfine","modulationwheelfine","breathcontrollerfine","footcontrollerfine","portamentotimefine","dataentryfine","volumefine","balancefine","panfine","expressionfine","effectcontrol1fine","effectcontrol2fine","holdpedal","portamento","sustenutopedal","softpedal","legatopedal","hold2pedal","soundvariation","resonance","soundreleasetime","soundattacktime","brightness","soundcontrol6","soundcontrol7","soundcontrol8","soundcontrol9","soundcontrol10","generalpurposebutton1","generalpurposebutton2","generalpurposebutton3","generalpurposebutton4","reverblevel","tremololevel","choruslevel","celestelevel","phaserlevel","databuttonincrement","databuttondecrement","nonregisteredparametercoarse","nonregisteredparameterfine","registeredparametercoarse","registeredparameterfine","MIDI_NRPN_MESSAGES","entrymsb","entrylsb","increment","decrement","paramlsb","parammsb","nullactiveparameter","MIDI_CHANNEL_MODE_MESSAGES","allsoundoff","resetallcontrollers","localcontrol","allnotesoff","omnimodeoff","omnimodeon","monomodeon","polymodeon","octaveOffset","supported","get","navigator","enabled","interface","bind","inputs","outputs","sysexEnabled","nrpnEventsEnabled","set","nrpnTypes","time","performance","now","wm","Input","midiInput","that","channel","system","_midiInput","connection","id","manufacturer","name","state","type","_initializeUserHandlers","onmidimessage","_onMidiMessage","Output","midiOutput","_midiOutput","enable","callback","requestMIDIAccess","then","midiAccess","promiseTimeout","events","promises","_resetInterfaceUserHandlers","onstatechange","e","push","values","input","next","done","open","output","onPortsOpen","clearTimeout","_updateInputsAndOutputs","_onInterfaceStateChange","call","forEach","event","setTimeout","Promise","all","catch","err","disable","removeListener","addListener","listener","TypeError","indexOf","hasListener","o","length","splice","toMIDIChannels","channels","Array","isArray","map","ch","parseInt","filter","getInputById","String","i","getOutputById","getInputByName","getOctave","number","Math","floor","getOutputByName","guessNoteNumber","toFixed","round","noteNameToNumber","matches","match","RangeError","semitones","toUpperCase","result","toLowerCase","_updateInputs","_updateOutputs","remove","updated","nInput","add","j","nOutput","timestamp","timeStamp","port","handler","on","item","constructor","every","chNum","listeners","l","prop1","hasOwnProperty","prop2","target","data","_parseChannelEvent","_parseNrpnEvent","_parseSystemEvent","data1","data2","command","channelBufferIndex","ccEvent","controller","getCcNameByNumber","rawData","ev","nrpnNumber","nrpnValue","nrpnControllerType","nrpnEvent","note","octave","velocity","rawVelocity","getChannelModeByNumber","cc","status","cm","song","send","message","parsed","concat","parseFloat","sendSysex","options","_parseTimeParameter","sendTimecodeQuarterFrame","sendSongPosition","msb","lsb","sendSongSelect","sendTuningRequest","sendClock","sendStart","sendContinue","sendStop","sendActiveSensing","sendReset","stopNote","sendChannelMode","nVelocity","isNaN","_convertNoteToArray","playNote","duration","nRelease","release","sendKeyAftertouch","pressure","nPressure","sendControlChange","_selectRegisteredParameter","parameter","_selectNonRegisteredParameter","_setCurrentRegisteredParameter","_deselectRegisteredParameter","setRegisteredParameter","setNonRegisteredParameter","incrementRegisteredParameter","decrementRegisteredParameter","setPitchBendRange","cents","setModulationRange","setMasterTuning","coarse","fine","setTuningProgram","setTuningBank","sendProgramChange","program","sendChannelAftertouch","sendPitchBend","bend","nLevel","substring","notes","arguments","source","key","api","init","converter","defaultAttributes","attributes","document","expires","Date","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","create","cookies","jar","parts","slice","join","foundKey","read","withAttributes","withConverter","freeze","path","midiKeyNames","useState","inputDeviceList","setInputDeviceList","Cookies","selectedInputDevice","setSelectedInputDevice","midiEnabled","setMidiEnabled","midiNote","setMidiNote","requestedKey","setRequestedKey","randomNote","setRandomNote","successState","setSuccessState","practiceCount","setPracticeCount","scaleCMajor","midiKey","steps","getScaleKeyNames","scale","keys","orderedKeyNames","sliceIndex","endindex","getOrderedKeyNames","reduce","previousValue","currentValue","createTask","cleff","minIndex","maxIndex","randomIndex","random","keyIndex","noteKeyName","noteIndex","getRandomNote","setInput","inputId","console","log","useEffect","className","title","FormattedMessage","defaultMessage","classNames","device","checked","onChange","htmlFor"],"sourceRoot":""}